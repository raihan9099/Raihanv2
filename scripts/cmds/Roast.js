



global.roastInterval = null;

module.exports = {
  config: {
    name: "roast",
    aliases: ["ro"],
    version: "4.4",
    author: "Saim",
    countDown: 5,
    role: 1,
    shortDescription: {
      en: "Roast your mentioned friend line by line!"
    },
    longDescription: {
      en: "Sends savage roast lines with emoji, one by one. Admin only. Reply 'stop' to any roast to cancel."
    },
    category: "Fun",
    guide: {
      en: "{pn} @mention"
    }
  },

  onStart: async function ({ message, api, event }) {
    const mentions = Object.keys(event.mentions);
    if (mentions.length === 0)
      return message.reply("тЭМ Please mention someone to roast.");

    const targetID = mentions[0];
    const targetName = event.mentions[targetID];
    const tagText = `@${targetName}`;

    const roasts = [
      "рждрзЛржХрзЗ ржжрзЗржЦрзЗ ржоржирзЗ рж╣рзЯ calculator-ржПржУ рждрзБржЗ ржнрзБрж▓ ржжрж┐рж╕ ЁЯШЬ.",
      "рждрзБржЗ ржПржоржи ржПржХржЯрж╛ ржЕржмрж╕рзНржерж╛, mirror рждрзЛржХрзЗ ignore ржХрж░рзЗ ЁЯШЖ.",
      "рждрзБржЗ рж▓рж╛рж╕рзНржЯ bench-er ржЧрж░рзНржм, ржХрж╛рж░ржг рждрзБржЗржЗ ржХрзЛржирзЛржжрж┐ржи pass ржХрж░рж┐рж╕ ржирж╛ ЁЯджтАНтЩВя╕П.",
      "рждрзЛрж░ IQ ржПржд low, ржпрзЗ mosquito repellent-ржУ ignore ржХрж░рзЗ ЁЯШЕ.",
      "рждрзБржЗ ржкрзНрж░рзЗржорзЗ ржкрзЬрж┐рж╕ ржирж╛, ржкрзНрж░рзЗржо рждрзЛржХрзЗ avoid ржХрж░рзЗ ЁЯе▓.",
      "рждрзБржЗ ржорж╛ржирзБрж╖ ржирж╛ meme, рждрзЛржХрзЗ ржирж┐рзЯрзЗ рж╕ржмрж╛ржЗ рж╣рж╛рж╕рзЗ ЁЯдг.",
      "рждрзЛрж░ ржХрж╛ржЬ рж╢рзБржзрзБ seen ржжрж┐рзЯрзЗ ржЪрзБржк ржерж╛ржХрж╛ тАФ рждрзЛржХрзЗ ghost ржмрж╛ржирж╛рждрзЗ ржкрж╛рж░рждрж╛ржо ЁЯС╗.",
      "рждрзБржЗ ржПржоржи ржзрж░рж╛, рждрзЛржХрзЗ block ржХрж░рзЗржУ рж╢рж╛ржирзНрждрж┐ ржирж╛ржЗ ЁЯЪл.",
      "рждрзБржЗ ржПржд useless, Google-e ржЦрзБржЬрж▓рзЗржУ ржХрж╛ржЬрзЗрж░ ржХрж┐ржЫрзБ ржкрж╛ржмрж┐ ржирж╛ ЁЯзР.",
      "рждрзЛрж░ ржХржерж╛ рж╢рзБржирзЗ silence request ржХрж░рж╕рзЗ тАУ ржЪрзБржк ржерж╛ржХрж┐рж╕ ржирж╛ ржПржХржЯрзБ ЁЯе▒.",
      "рждрзБржЗ ржПржоржи personality, WhatsApp DP ржжрзЗржЦрзЗржЗ ржмрзБржЭрзЗ ржлрзЗрж▓рж╛ ржпрж╛рзЯ ЁЯПа.",
      "рждрзЛрж░ crush рждрзЛржХрзЗ ржжрзЗржЦрзЗ ржмрж▓рзЗ, 'ржнрж╛ржЗ ржПржЗ ржжрж┐ржХ ржжрж┐рзЯрж╛ ржирж╛' ЁЯШм.",
      "рждрзБржЗ ржПржХржорж╛рждрзНрж░ friend, ржпрж╛рж░рзЗ tag ржжрж┐рж▓рзЗ ржкрж╕рзНрждрж╛ржЗ ЁЯШТ.",
      "рждрзБржЗ ржПржд ржмрзЗржХрж╛рж░, keyboard-er spacebar-er ржорждрзЛ тАФ underrated ЁЯдЦ.",
      "рждрзБржЗ selfie ржжрж┐рж▓рзЗ camera reverse рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯд│.",
      "рждрзБржЗ math ржП ржПржд ржмрж╛ржЬрзЗ, 2+2=22 ржмрж┐рж╢рзНржмрж╛рж╕ ржХрж░рж┐рж╕ ЁЯУЪ.",
      "рждрзБржЗ joke ржХрж░рж┐рж╕, рж╣рж╛рж╕рж┐ ржЖрж╕рзЗ ржирж╛ тАФ ржШрзБржо ржЖрж╕рзЗ ЁЯТд.",
      "рждрзБржЗ class clown рж╣ржЗрждрзЗ ржЪрж╛рж╕, ржХрж┐ржирзНрждрзБ рж╕ржмрж╛рж░ stress рж╣ржЗрж╕ ЁЯШФ.",
      "рждрзБржЗ ржПржд bad, antivirus рждрзЛржХрзЗ remove ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржирж╛ ЁЯжа.",
      "рждрзБржЗ рж░рж╛ржЧ ржХрж░рж▓рзЗ ржорж╛ржирзБрж╖ ржнрзЯ ржкрж╛рзЯ ржирж╛, рж╣рж╛рж╕рзЗ ЁЯШВ.",
      "рждрзЛрж░ attitude ржПржд fake, barcode ржжрж┐рзЯрзЗ scan ржХрж░рж╛ ржпрж╛рзЯ ЁЯП╖я╕П.",
      "рждрзБржЗ рж▓ржЬрзНржЬрж╛ ржирж╛ shame, insult ржПрж░ ржмрзНрж░рзНржпрж╛ржирзНржб ambassador ЁЯСС.",
      "рждрзБржЗ dustbin-ржУ accept ржХрж░рзЗ ржирж╛, even trash has standards ЁЯЧСя╕П.",
      "рждрзЛрж░ ржмржирзНржзрзБрждрзНржм тАФ only when needed ЁЯТФ.",
      "рждрзЛрж░ crush рждрзЛржХрзЗ ржжрзЗржЦрзЗ auto correct рж╣рзЯ тАФ Brother detected! ЁЯФз.",
      "рждрзБржЗ ржПржоржи dull, candle ржУ ржЬрзНржмрж▓рзЗ ржирж╛ ржкрж╛рж╢рзЗ ЁЯХпя╕П.",
      "рждрзБржЗ face unlock ржжрж┐рж╕, phone ржШрзБржорж┐рзЯрзЗ ржкрзЬрзЗ ЁЯШ┤.",
      "рждрзБржЗ selfie ржжрж┐рж╕, camera ржЧрж╛рж▓рж┐ ржжрзЗрзЯ ЁЯПГтАНтЩВя╕П.",
      "рждрзБржЗ ржПржд ржЪрж┐ржк, discount-er ржирж┐ржЪрзЗржУ ржЪрж▓рзЗ ржпрж╛рж╕ ЁЯТ╕.",
      "рждрзБржЗ рж╣рзНржпрж╛ржирзНржбрж╕рж╛ржо? рж╣рж╛рж╣рж╛, Google confirm ржХрж░рзЗ ржирж╛ржЗ ЁЯШЖ."
    ];

    let currentIndex = 0;
    const threadID = event.threadID;

    function roastLoop() {
      if (currentIndex < roasts.length) {
        const body = `${currentIndex + 1}. ${tagText}, ${roasts[currentIndex]}`;
        api.sendMessage({
          body,
          mentions: [{ id: targetID, tag: tagText }]
        }, threadID, (err, info) => {
          global.lastRoastMessageID = info.messageID;
        });

        currentIndex++;
      } else {
        clearInterval(global.roastInterval);
        global.roastInterval = null;
      }
    }

    global.roastInterval = setInterval(roastLoop, 1500);

    message.reply(`ЁЯФе Roasting ${targetName} started!\nReply "stop" to any roast to end it.`);
  },

  onChat: async function ({ event, message }) {
    if (
      event.body?.toLowerCase() === "stop" &&
      global.roastInterval &&
      event.messageReply &&
      event.messageReply.messageID === global.lastRoastMessageID
    ) {
      clearInterval(global.roastInterval);
      global.roastInterval = null;
      return message.reply("ЁЯЫС Roast process has been stopped!");
    }
  }
};
